plugins {
    id 'java'
    id 'groovy'
    id 'checkstyle'
    id 'findbugs'
    id 'pmd'
    id 'codenarc'
    id 'jacoco'
    id 'idea'
    id 'maven-publish'
    id 'com.github.ben-manes.versions' version '0.17.0'
}

version = '0.1.1-SNAPSHOT'
group = 'com.moonlightpixels'

ext {
    gdxVersion = '1.9.8'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier "sources"
    extension "jar"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier "javadoc"
    extension "jar"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}


checkstyle {
    sourceSets = [sourceSets.main]
}

findbugs {
    sourceSets = [sourceSets.main]
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Pmd) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

codenarc {
    configFile = rootProject.file('codenarcrule.groovy')
    reportFormat = System.properties['codeNarcOutput'] ?: 'html'
}

test.finalizedBy jacocoTestReport

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-ai:1.8.1"
    compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
    compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
    compile  'com.github.czyzby:gdx-lml:1.9.1.9.6'
    compile 'com.google.guava:guava:23.6-jre'
    compile 'com.google.inject:guice:4.1.0'

    testCompile "org.codehaus.groovy:groovy-all:2.4.13"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
    testCompile "nl.jqno.equalsverifier:equalsverifier:2.4.2"
    testRuntime "cglib:cglib-nodep:3.2.6"
    testRuntime "org.objenesis:objenesis:2.6"
}
